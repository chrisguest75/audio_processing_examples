set dotenv-load := true

export DEFAULT_APPLICATION:="visqol"

# default lists actions
default:
  @just -f {{ source_file() }} --list

# build docker image 
docker-build application="$DEFAULT_APPLICATION": 
  #!/usr/bin/env bash
  set -xeufo pipefail  
  docker build --progress=plain --memory 6GB -f Dockerfile.{{ application }} -t {{ application }}:latest .

# get shell in docker container
docker-shell application="$DEFAULT_APPLICATION": (docker-build application)
  #!/usr/bin/env bash
  set -xeufo pipefail  
  mkdir -p ./in || true
  mkdir -p ./out || true
  docker run -it --rm  -v $(pwd)/in:/in -v $(pwd)/out:/out --memory 6GB --entrypoint /usr/bin/bash {{ application }}:latest  

# run docker image
docker-run application="$DEFAULT_APPLICATION": (docker-build application)
  #!/usr/bin/env bash
  set -xeufo pipefail  
  docker run -it {{ application }}:latest

mix-noise noisetype="brown" amplitude="0.1":
  #!/usr/bin/env bash
  set -eufo pipefail
  mkdir -p ../output/noise || true 
  export NOISE_TYPE={{ noisetype }}
  ffmpeg -hide_banner -y -i ../sources/audiobooks/christmas_short_works_2008_0812_64kb_mp3/english_coventrycarol_unknown_rg_64kb.mp3 -ar 16000 -t 00:00:30 ../output/noise/english_coventrycarol_unknown_rg_64kb.wav
  ffmpeg -hide_banner -y -i ../output/noise/english_coventrycarol_unknown_rg_64kb.wav -filter_complex "anoisesrc=color=${NOISE_TYPE}:amplitude={{ amplitude }}[noise];[0:a][noise]amix=inputs=2:duration=first:dropout_transition=3" -ar 16000 ../output/noise/english_coventrycarol_unknown_rg_64kb_${NOISE_TYPE}noise.wav
  vlc ../output/noise/english_coventrycarol_unknown_rg_64kb.wav
  vlc ../output/noise/english_coventrycarol_unknown_rg_64kb_${NOISE_TYPE}noise.wav

copy-inputs: 
  #!/usr/bin/env bash
  set -xeufo pipefail
  mkdir -p ./in || true
  cp ../output/noise/english_coventrycarol_unknown_rg_64kb.wav ./in/
  cp ../output/noise/english_coventrycarol_unknown_rg_64kb_brownnoise.wav ./in/
